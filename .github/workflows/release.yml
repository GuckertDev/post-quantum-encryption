name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-release:
    name: Build Release Binaries
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive_name: pqe-linux-amd64.tar.gz
          - os: macos-latest
            target: x86_64-apple-darwin
            archive_name: pqe-macos-amd64.tar.gz
          - os: macos-latest
            target: aarch64-apple-darwin
            archive_name: pqe-macos-arm64.tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            archive_name: pqe-windows-amd64.zip

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare release assets (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          cd target/${{ matrix.target }}/release
          tar -czvf ${{ matrix.archive_name }} pqe
          mv ${{ matrix.archive_name }} ../../../

      - name: Prepare release assets (Windows)
        if: runner.os == 'Windows'
        run: |
          cd target/${{ matrix.target }}/release
          7z a ${{ matrix.archive_name }} pqe.exe
          move ${{ matrix.archive_name }} ..\..\..\

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.archive_name }}